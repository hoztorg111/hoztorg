{"version":3,"sources":["jqModal.js"],"names":["$","fn","jqm","options","extend","params","o","e","this","data","ID","addClass","trigger","jqmAddTrigger","addTrigger","err","jqmAddClose","jqmShow","each","_jqmShown","show","jqmHide","hide","window","console","error","msg","t","url","z","parseInt","event","noOverlay","css","undefined","v","overlayClass","height","width","position","left","top","z-index","opacity","overlay","h","ajax","c","target","substr","attr","substring","html","ajaxText","load","onLoad","call","open","w","close","key","push","i","onShow","closeClass","A","toTop","before","insertAfter","onHide","pop","modal","F","after","remove","document","X","parents","activeModal","length","I","focusFunc","hash","focus","jQuery"],"mappings":"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","file":"jqModal.min.js","sourcesContent":["/*\n * jqModal - Minimalist Modaling with jQuery\n *\n * Copyright (c) 2007-2014 Brice Burgess @iceburg_net\n * Dual licensed under the MIT and GPL licenses:\n *   http://www.opensource.org/licenses/mit-license.php\n *   http://www.gnu.org/licenses/gpl.html\n *\n * $Version: 1.0.2 (2014.04.10 +r19)\n * Requires: jQuery 1.2.3+\n */\n\n(function($) {\n\n\t/**\n\t * Initialize a set of elements as \"modals\". Modals typically are popup dialogs,\n\t * notices, modal windows, &c.\n\t *\n\t * @name jqm\n\t * @param options user defined options, augments defaults.\n\t * @type jQuery\n\t * @cat Plugins/jqModal\n\t */\n\n\t$.fn.jqm=function(options){\n\n\t\tvar o = $.extend({}, $.jqm.params, options);\n\n\t\treturn this.each(function(){\n\t\t\tvar e = $(this),\n\t\t\t\tjqm = $(this).data('jqm');\n\n\t\t\tif(!jqm) jqm = {ID: I++};\n\n\t\t\t// add/extend options to modal and mark as initialized\n\t\t\te.data('jqm',$.extend(o,jqm)).addClass('jqm-init');\n\n\t\t\t// ... Attach events to trigger showing of this modal\n\t\t\to.trigger&&$(this).jqmAddTrigger(o.trigger);\n\t\t});\n\t};\n\n\n\t/**\n\t * Matching modals will have their jqmShow() method fired by attaching a\n\t *   onClick event to elements matching `trigger`.\n\t *\n\t * @name jqmAddTrigger\n\t * @param trigger a selector String, jQuery collection of elements, or a DOM element.\n\t */\n\t$.fn.jqmAddTrigger=function(trigger){\n\t\treturn this.each(function(){\n\t\t\tif(!addTrigger($(this), 'jqmShow', trigger))\n\t\t\t\terr(\"jqmAddTrigger must be called on initialized modals\")\n\t\t});\n\t};\n\n\n\t/**\n\t * Matching modals will have their jqmHide() method fired by attaching an\n\t *   onClick event to elements matching `trigger`.\n\t *\n\t * @name jqmAddClose\n\t * @param trigger a selector String, jQuery collection of elements, or a DOM element.\n\t */\n\t$.fn.jqmAddClose=function(trigger){\n\t\treturn this.each(function(){\n\t\t\tif(!addTrigger($(this), 'jqmHide', trigger))\n\t\t\t\terr(\"jqmAddClose must be called on initialized modals\")\n\t\t});\n\t};\n\n\n\t/**\n\t * Open matching modals (if not shown)\n\t */\n\t$.fn.jqmShow=function(trigger){\n\t\treturn this.each(function(){ !this._jqmShown&&show($(this), trigger); });\n\t};\n\n\t/**\n\t * Close matching modals\n\t */\n\t$.fn.jqmHide=function(trigger){\n\t\treturn this.each(function(){ this._jqmShown&&hide($(this), trigger); });\n\t};\n\n\n\t// utility functions\n\n\tvar\n\t\terr = function(msg){\n\t\t\tif(window.console && window.console.error) window.console.error(msg);\n\n\n\t}, show = function(e, t){\n\t\t/**\n\t\t * e = modal element (as jQuery object)\n\t\t * t = triggering element\n\t\t *\n\t\t * o = options\n\t\t * z = z-index of modal\n\t\t * v = overlay element (as jQuery object)\n\t\t * h = hash (for jqModal <= r15 compatibility)\n\t\t */\n\n\t\tvar o = e.data('jqm'),\n\t\t\tt = t || window.event,\n\t\t\tz = (parseInt(e.css('z-index')));\n\n\t\t\tif(o.noOverlay === undefined || (o.noOverlay !== undefined && !o.noOverlay) ) {\n\t\t\t\tif( isNaN(z) ) {\n\t\t\t\t\tif( window['lastJqmZindex'] ) {\n\t\t\t\t\t\twindow['lastJqmZindex'] = z = window['lastJqmZindex'] + 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = 3000;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twindow['lastJqmZindex'] = z;\n\t\t\t\tvar\tv = $('<div></div>').addClass(o.overlayClass).css({height:'100%',width:'100%',position:'fixed',left:0,top:0,'z-index':z-1,opacity:o.overlay/100});\n\t\t\t\te.css('z-index',z);\n\t\t\t} else {\n\t\t\t\tvar\tv = $('');\n\t\t\t\te.css('z-index',2999);\n\t\t\t}\n\t\t\n\t\t\t// maintain legacy \"hash\" construct\n\t\t\th = {w: e, c: o, o: v, t: t};\n\n\n\t\tif(o.ajax){\n\t\t\tvar target = o.target || e,\n\t\t\t\turl = o.ajax;\n\n\t\t\ttarget = (typeof target == 'string') ? $(target,e) : $(target);\n\t\t\tif(url.substr(0,1) == '@') url = $(t).attr(url.substring(1));\n\n\t\t\t // Load the Ajax Content (and once loaded);\n\t\t\t   // Fire the onLoad callback (if exists),\n\t\t\t   // Attach closing events to elements inside the modal that match the closingClass,\n\t\t\t   // and Execute the jqModal default Open Callback\n\t\t\ttarget.html(o.ajaxText).load(url,function(){\n\t\t\t\to.onLoad && o.onLoad.call(this,h);\n\t\t\t\topen(h);\n\t\t\t});\n\t\t}\n\t\telse { open(h); }\n\n\t}, hide = function(e, t){\n\t\t/**\n\t\t * e = modal element (as jQuery object)\n\t\t * t = triggering element\n\t\t *\n\t\t * o = options\n\t\t * h = hash (for jqModal <= r15 compatibility)\n\t\t */\n\n\t\tvar o = e.data('jqm'),\n\t\t\tt = t || window.event,\n\n\t\t// maintain legacy \"hash\" construct\n\t\th = {w: e, c: o, o: e.data('jqmv'), t: t};\n\n\t\tclose(h);\n\n\t}, onShow = function(hash){\n\t\t// onShow callback. Responsible for showing a modal and overlay.\n\t\t//  return false to stop opening modal.\n\n\t\t// hash object;\n\t    //  w: (jQuery object) The modal element\n\t    //  c: (object) The modal's options object\n\t    //  o: (jQuery object) The overlay element\n\t    //  t: (DOM object) The triggering element\n\n\t\t// display the overlay (prepend to body) if not disabled\n\n\t\t// prevent double click\n\t\tif( hash.w[0]._jqmShown )\n\t\t\treturn false;\n\t\t\n\t\tif(hash.c.overlay > 0)\n\t\t\thash.o.prependTo('#popup_iframe_wrapper');\n\n\t\t// make modal visible\n\t\thash.w.show();\n\n\t\t// call focusFunc (attempts to focus on first input in modal)\n\t\t$.jqm.focusFunc(hash.w);\n\n\t\treturn true;\n\n\n\t}, onHide = function(hash){\n\t\t// onHide callback. Responsible for hiding a modal and overlay.\n\t\t//  return false to stop closing modal.\n\n\t\t// hash object;\n\t    //  w: (jQuery object) The modal element\n\t    //  c: (object) The modal's options object\n\t    //  o: (jQuery object) The overlay element\n\t    //  t: (DOM object) The triggering element\n\n\t\t// hide modal and if overlay, remove overlay.\n\t\thash.w.hide() && hash.o && hash.o.remove();\n\n\t\treturn true;\n\n\n\t},  addTrigger = function(e, key, trigger){\n\t\t// addTrigger: Adds a jqmShow or jqmHide (key) for a modal (e)\n\t\t//  all elements that match trigger string (trigger)\\\n\n\t\t// return false if e is not an initialized modal element\n\t\tif(!e.data('jqm')) return false;\n\n\t\treturn $(trigger).each(function(){\n\t\t\t// register modal to trigger elements\n\t\t\tthis[key] = this[key] || [];\n\t\t\tthis[key].push(e);\n\n\t\t}).click(function(){\n\n\t\t\tvar trigger = this;\n\n\t\t\t// foreadh modal registered to this trigger, call jqmShow ||\n\t\t\t//   jqmHide (key) on modal passing trigger element (e)\n\t\t\t$.each(this[key], function(i, e){ e[key](trigger); });\n\n\t\t\t// stop trigger click event from bubbling\n\t\t\treturn false;\n\t\t});\n\n\n\t},  open = function(h){\n\t\t// open: executes the onOpen callback + performs common tasks if successful\n\n\t\t// transform legacy hash into new var shortcuts\n\t\t var e = h.w,\n\t\t \tv = h.o,\n\t\t \to = h.c;\n\n\t\t// execute onShow callback\n\t\tif(o.onShow(h) !== false){\n\t\t\t// mark modal as shown\n\t\t\te[0]._jqmShown = true;\n\n\t\t\t// if modal dialog\n\t\t\t//\n\t\t\t// Bind the Keep Focus Function [F] if no other Modals are open (!A[0]) +\n\t\t\t// Add this modal to the opened modals stack (A) for nested modal support\n\t\t\t//\n\t\t\t// else, close dialog when overlay is clicked\n\t\t\tif(o.modal){ !A[0]&&F('bind'); A.push(e); }\n            else e.jqmAddClose(v);\n\n\t\t\t//  Attach closing events to elements inside the modal that match the closingClass\n\t\t\to.closeClass&&e.jqmAddClose($('.' + o.closeClass,e));\n\n\t\t\t// IF toTop is true and overlay exists;\n\t\t\t//  Add placeholder element <span id=\"jqmP#ID_of_modal\"/> before modal to\n\t\t\t//  remember it's position in the DOM and move it to a child of the body tag (after overlay)\n\t\t\to.toTop&&v&&e.before('<span id=\"jqmP'+o.ID+'\"></span>').insertAfter(v);\n\n\t\t\t// remember overlay (for closing function)\n\t\t\te.data('jqmv',v);\n\t\t}\n\n\n\t},  close = function(h){\n\t\t// close: executes the onHide callback + performs common tasks if successful\n\n\t\t// transform legacy hash into new var shortcuts\n\t\t var e = h.w,\n\t\t \tv = h.o,\n\t\t \to = h.c;\n\n\t\t// execute onShow callback\n\t\tif(o.onHide(h) !== false){\n\t\t\t// mark modal as !shown\n\t\t\te[0]._jqmShown = false;\n\n\t\t\t // If modal, remove from modal stack.\n\t\t\t // If no modals in modal stack, unbind the Keep Focus Function\n\t\t\t if(o.modal){A.pop();!A[0]&&F('unbind');}\n\n\t\t\t // IF toTop was passed and an overlay exists;\n\t\t\t //  Move modal back to its \"remembered\" position.\n\t\t\t o.toTop&&v&&$('#jqmP'+o.ID).after(e).remove();\n\t\t}\n\n\n\t},  F = function(t){\n\t\t// F: The Keep Focus Function (for modal: true dialos)\n\t\t// Binds or Unbinds (t) the Focus Examination Function (X) to keypresses and clicks\n\n\t\t$(document)[t](\"keypress keydown mousedown\",X);\n\n\n\t}, X = function(e){\n\t\t// X: The Focus Examination Function (for modal: true dialogs)\n\n\t\tvar modal = $(e.target).data('jqm') || $(e.target).parents('.jqm-init:first').data('jqm'),\n\t\t\tactiveModal = A[A.length-1].data('jqm');\n\n\t\t// allow bubbling if event target is within active modal dialog\n\t\tif(modal && modal.ID == activeModal.ID) return true;\n\n\t\t// else, trigger focusFunc (focus on first input element and halt bubbling)\n\t\treturn $.jqm.focusFunc(activeModal);\n\t},\n\n\tI = 0,   // modal ID increment (for nested modals)\n\tA = [];  // array of active modals (used to lock interactivity to appropriate modal)\n\n\n\t// $.jqm, overridable defaults\n\t$.jqm = {\n\t\t/**\n\t\t *  default options\n\t\t *\n\t\t * (Integer)   overlay      - [0-100] Translucency percentage (opacity) of the body covering overlay. Set to 0 for NO overlay, and up to 100 for a 100% opaque overlay.\n\t\t * (String)    overlayClass - Applied to the body covering overlay. Useful for controlling overlay look (tint, background-image, &c) with CSS.\n\t\t * (String)    closeClass   - Children of the modal element matching `closeClass` will fire the onHide event (to close the modal).\n\t\t * (Mixed)     trigger      - Matching elements will fire the onShow event (to display the modal). Trigger can be a selector String, a jQuery collection of elements, a DOM element, or a False boolean.\n\t\t * (String)    ajax         - URL to load content from via an AJAX request. False to disable ajax. If ajax begins with a \"@\", the URL is extracted from the attribute of the triggering element (e.g. use '@data-url' for; <a href=\"#\" class=\"jqModal\" data-url=\"modal.html\">...)\n\t\t * (Mixed)     target       - Children of the modal element to load the ajax response into. If false, modal content will be overwritten by ajax response. Useful for retaining modal design.\n\t\t *                            Target may be a selector string, jQuery collection of elements, or a DOM element -- and MUST exist as a child of the modal element.\n\t\t * (String)    ajaxText     - Text shown while waiting for ajax return. Replaces HTML content of `target` element.\n\t\t * (Boolean)   modal        - If true, user interactivity will be locked to the modal window until closed.\n\t\t * (Boolean)   toTop        - If true, modal will be posistioned as a first child of the BODY element when opened, and its DOM posistion restored when closed. Useful for overcoming z-Index container issues.\n\t\t * (Function)  onShow       - User defined callback function fired when modal opened.\n\t\t * (Function)  onHide       - User defined callback function fired when modal closed.\n\t\t * (Function)  onLoad       - User defined callback function fired when ajax content loads.\n\t\t */\n\t\tparams: {\n\t\t\toverlay: 50,\n\t\t\toverlayClass: 'jqmOverlay',\n\t\t\tcloseClass: 'jqmClose',\n\t\t\ttrigger: '.jqModal',\n\t\t\tajax: false,\n\t\t\ttarget: false,\n\t\t\tajaxText: '',\n\t\t\tmodal: false,\n\t\t\ttoTop: false,\n\t\t\tonShow: onShow,\n\t\t\tonHide: onHide,\n\t\t\tonLoad: false\n\t\t},\n\n\t\t// focusFunc is fired when a modal is shown, or when interaction occurs outside\n\t\t// a modal enabled dialog. Passed the modal element.\n\t\tfocusFunc: function(e) { $(':input:visible:first',e).focus(); return false; }\n\t};\n\n})( jQuery );"]}